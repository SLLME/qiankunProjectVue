
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
  

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    gzip_vary  on;
    gzip_proxied   any;
    gzip_comp_level   6;
    gzip_buffers  16 8k;
    gzip_http_version  1.1;
    gzip_min_length  256;
    gzip_types       text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_disable "MSIE [1-6]\.";

    server {
        listen       8083;
        server_name  localhost;
	
		
        #   指定允许跨域的方法，*代表所有
        add_header Access-Control-Allow-Methods *;

        #   预检命令的缓存，如果不缓存每次会发送两次请求
        add_header Access-Control-Max-Age 3600;
        #   带cookie请求需要加上这个字段，并设置为true
        add_header Access-Control-Allow-Credentials true;

        #   表示允许这个域跨域调用（客户端发送请求的域名和端口） 
        #   $http_origin动态获取请求客户端请求的域   不用*的原因是带cookie的请求不支持*号
        add_header Access-Control-Allow-Origin $http_origin;

        #   表示请求头的字段 动态获取
        add_header Access-Control-Allow-Headers 
        $http_access_control_request_headers;

        #   OPTIONS预检命令，预检命令通过时才发送请求
        #   检查请求的类型是不是预检命令
        if ($request_method = OPTIONS){
            return 200;
        }
	

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /cgfp/service/ {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass   http://127.0.0.1:8077/v1/;
            index  index.html index.htm;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
		

        location /api/file/view/ {
            proxy_pass   https://vat.robosense.cn/prod-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/api/file/view/(.*)$ /$1 break;
        }

        # location / {
        #     # root   htmls;
        #     root  sttest;
        #     index  index.html index.htm;
        #     try_files $uri $uri/ /index.html;
        # }

        # location /sub {
        #     # root   htmls;
        #     root  tfyh;
        #     index  index.html index.htm;
        #     try_files $uri $uri/ /sub/index.html; // 相对路径要完整
        # }

        # location /cgfp/ui {
        #     # root   htmls;
        #     root  tfyhtwo;
        #     index  index.html index.htm;
        #     try_files $uri $uri/ /cgfp/ui/index.html; # 相对路径要完整
        # }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #

        location / {
            root   html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /child {
            root   html;
            index  index.html index.htm;
            try_files $uri $uri/ /child/index.html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
}
